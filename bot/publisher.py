from aiogram import Bot
from bot.db.crud import get_scheduled_post, mark_post_as_published, add_post
from datetime import datetime
from bot.generator.generator import generate_post
import re

from bot.config import CHANNEL_ID


def clean_markdown(text: str) -> str:
    text = text.replace("\xa0", " ")
    text = text.replace("\u200b", "")
    text = text.replace("\u202f", " ")
    text = re.sub(r"\n{3,}", "\n\n", text)
    return text.strip()


def clean_html(text: str) -> str:
    # Telegram –ù–ï –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç <p>, <br>, <ul>, <li> –∏ —Ç.–ø.
    text = re.sub(r"</?p>", "", text)
    text = re.sub(r"</?br\s*/?>", "\n", text)
    return text.strip()


async def publish_scheduled_post(bot: Bot):
    print("üïì –ó–∞–¥–∞—á–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω–∞...")

    post = get_scheduled_post()

    if not post:
        print("üì≠ –í –±–∞–∑–µ –Ω–µ—Ç –≥–æ—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞. –ü—Ä–æ–±—É–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å...")
        try:
            content = await generate_post(bot=bot)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI: {e}")
            return

        if content:
            post = add_post(
                title="AI generated",
                content=content,
                scheduled_for=datetime.utcnow(),
                is_ai_generated=True,
            )
            print("‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç (–ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç).")
            return

    should_post = False
    if not post.scheduled_for:
        should_post = True
    else:
        now = datetime.utcnow()
        scheduled_naive = post.scheduled_for.replace(tzinfo=None)
        should_post = scheduled_naive <= now
        print(
            f"‚è± scheduled_for = {scheduled_naive}, now = {now}, ready = {should_post}"
        )

    if should_post:
        try:
            cleaned = clean_html(post.content)
            print("üì® –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª...")
            await bot.send_message(CHANNEL_ID, cleaned, parse_mode="HTML")
            mark_post_as_published(post.id)
            print(f"‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: {post.title}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞: {e}")
    else:
        print("‚è≥ –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –µ—â—ë –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ª–æ.")
